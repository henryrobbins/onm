version: 2.1
orbs:
  codecov: codecov/codecov@3.3.0
jobs:
  build:
    docker:
      - image: cimg/python:3.9.18
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "test_requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r test_requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "test_requirements.txt" }}
          paths:
            - "venv"

  lint:
    docker:
      - image: cimg/python:3.9.18
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "test_requirements.txt" }}
      - run:
          name: Lint with flake8
          command: |
            . venv/bin/activate
            flake8 onm

  unit_tests:
    docker:
      - image: cimg/python:3.9.18
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "test_requirements.txt" }}
      - run:
          name: Run unit tests and generate coverage
          command: |
            . venv/bin/activate
            coverage run -m pytest -m unit -s onm/tests
            coverage xml
      - codecov/upload:
          file: coverage.xml
          token: CODECOV_TOKEN
      - store_artifacts:
          path: unit-test-reports
          destination: unit-test-reports

  integration_tests:
    docker:
      - image: cimg/python:3.9.18
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "test_requirements.txt" }}
      - run:
          name: run integration tests
          command: |
            . venv/bin/activate
            pytest -m integration -s onm/tests --client_id $PLAID_CLIENT_ID --secret $PLAID_SECRET
      - store_artifacts:
            path: integration-test-reports
            destination: integration-test-reports

workflows:
  build-test-and-deploy:
      jobs:
        - build
        - lint:
            requires:
              - build
        - unit_tests:
            requires:
              - build
        - integration_tests:
            requires:
              - build
